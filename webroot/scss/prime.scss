@import 'settings';
@import '../bower_components/foundation-sites/scss/foundation';

// Here we define the breakpoints which will become the upper border for each media size.
// The function em-calc() calculates the em-value from a px-value.
$small-breakpoint:  rem-calc(640)  !default;
$medium-breakpoint: rem-calc(1024) !default;
$large-breakpoint:  rem-calc(1440) !default;
$xlarge-breakpoint: rem-calc(1920) !default;

// Here we define the lower and upper bounds for each media size
$small-range:   (0, $small-breakpoint) !default; /* 0, 640px */
$medium-range:  ($small-breakpoint  + rem-calc(1), $medium-breakpoint) !default; /* 641px, 1024px */
$large-range:   ($medium-breakpoint + rem-calc(1), $large-breakpoint)  !default; /* 1025px, 1440px */
$xlarge-range:  ($large-breakpoint  + rem-calc(1), $xlarge-breakpoint) !default; /* 1441px, 1920px */
$xxlarge-range: ($xlarge-breakpoint + rem-calc(1), rem-calc(99999999)) !default; /* 1921px, ... */

// Media Queries
$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

$retina: (
  "#{$screen} and (-webkit-min-device-pixel-ratio: 2)",
  "#{$screen} and (min--moz-device-pixel-ratio: 2)",
  "#{$screen} and (-o-min-device-pixel-ratio: 2/1)",
  "#{$screen} and (min-device-pixel-ratio: 2)",
  "#{$screen} and (min-resolution: 192dpi)",
  "#{$screen} and (min-resolution: 2dppx)"
);

footer{
	height: 10rem;
}

.top-bar-left {
	
	ul.menu li {
		width: 10rem;
	}
	li.has-submenu {
		/*border: thin solid black;*/
		position: relative;
		ul.nested {
			display: none;
		}
	}
	li:hover {
		background-color: gray;
		> a {
			color: #a1ffff;
		}
	}
	/*li.menu-text:hover {
		color: #ddd;
	}*/
	li.disabled {
		color: #bbb;
	}
	li.disabled:hover {
		color: #666;
	}
	li.has-submenu:hover > ul.nested {
		font-size: .75rem;
		display: block;
		position: absolute;
		top: .98rem;
		left: 4rem;
		z-index: 1000;
		border: thin solid #ccc;
	}
	ul.nested:hover {
		display: block;
		z-index: 1000;
	}
	section.artwork:nth-of-type(2n) {
		background-color:linen;
	}
}	

/*div.artworks {*/
	
	section.artwork {
		@include grid-row();
		
		> div.image {
			@media #{$small-only}  {  //max-width 640px, mobile-only styles, use when QAing mobile issues 
				@include grid-column(6);
				@include grid-col-end();
				color: red;
			}
			@media #{$medium-only}  {  //min-width 641px, medium screens  
				@include grid-column(3);
				@include grid-col-end();
				color: green;
			}
			@media #{$large-only}  {  //min-width 1025px, large screens 
				@include grid-column(3);
				color: blue;
			}
		}
		
		> div.text, > div.editions {
			@media #{$small-only} { // max-width 640px, mobile-only styles, use when QAing mobile issues 
				@include grid-column(12);
				color: red;
			}
			@media #{$large-only} { // min-width 1025px, large screens 
				@include grid-column(9);
				color: blue;
			}
		}
	}
/*}*/

/*div.editions {*/
	
	 section.edition {
		@include grid-row();
		
		> div.text {
			@include grid-column(12);

			@media #{$small-up} {
				@include grid-column(12);
			}
			@media #{$large-up} {
				@include grid-column(6);
			}
		}
		
		> div.pieces {
			@media #{$small-only} { // max-width 640px, mobile-only styles, use when QAing mobile issues 
				@include grid-column(12);
			}
			@media #{$large-only} { // min-width 1025px, large screens 
				@include grid-column(6);
			}
		}
		
		> div.formats {
			@media #{$small-up} { // max-width 640px, mobile-only styles, use when QAing mobile issues 
				@include grid-column(12);
			}
		}
	}
	
/*}*/

/*div.formats {*/
	
	section.format {
		@include grid-row();
	
		> div.image {
			@include grid-column(1);
		}
		> div.text {
			@include grid-column(5);
		}
		> div.pieces {
			@include grid-column(6);
		}
	}
/*}*/



section.format {
	@include grid-row;
	padding-top: 1em;
}

section.assignment, section.disposition, p.policy_statement {
	padding-top: .8em;
	font-size: 90%;
	color: #444;
}


form {
	legend {
		background: #ccc none repeat scroll 0 0;
		color: #7a7a7a;
		padding-left: 0.3rem;
		width: 100%;
	}
	img {
		width: 30%;
	}
	
	.form-error, .error-message {
		color: #ec5840;
		display: block;
		font-size: 1rem;
		font-weight: bold;
		margin-bottom: 1rem;
		margin-top: 0;
	}
}

span.nav {
	font-size: .9rem;
}

div.radio > label {
	
	.disabled {
		color: #ccc;
	}
	
	input {
		margin: .5rem;

		.disabled {
			color: #ccc;
		}
		
	}
}

.disabled  {
	color: #ccc;
}
